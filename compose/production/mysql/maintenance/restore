#!/usr/bin/env bash


### Restore database from a backup.
###
### Parameters:
###     <1> filename of an existing backup.
###
### Usage:
###     $ docker compose -f <environment>.yml (exec |run --rm) mysql restore <1>


set -o errexit
set -o pipefail
set -o nounset


working_dir="$(dirname ${0})"
source "${working_dir}/_sourced/constants.sh"
source "${working_dir}/_sourced/messages.sh"


if [[ -z ${1+x} ]]; then
    message_error "Backup filename is not specified yet it is a required parameter. Make sure you provide one and try again."
    exit 1
fi
backup_filename="${BACKUP_DIR_PATH}/${1}"
if [[ ! -f "${backup_filename}" ]]; then
    message_error "No backup with the specified filename found. Check out the 'backups' maintenance script output to see if there is one and try again."
    exit 1
fi

message_welcome "Restoring the '${MYSQL_DATABASE}' database from the '${backup_filename}' backup..."

if [[ "${MYSQL_USER}" == "root" ]]; then
    message_error "Restoring as 'root' user is not supported. Assign 'MYSQL_USER' env with another one and try again."
    exit 1
fi


message_info "Dropping the database..."
mysql -u"${MYSQL_USER}" -p"${MYSQL_PASSWORD}" -D"${MYSQL_DATABASE}" -e "DROP DATABASE ${MYSQL_DATABASE}"

message_info "Creating a new database..."
mysql -u"${MYSQL_USER}" -p"${MYSQL_PASSWORD}" -e "CREATE DATABASE ${MYSQL_DATABASE}"

message_info "Applying the backup to the new database..."
gunzip -c "${backup_filename}" | mysql -u"${MYSQL_USER}" -p"${MYSQL_PASSWORD}" -D "${MYSQL_DATABASE}"

message_success "The '${MYSQL_DATABASE}' database has been restored from the '${backup_filename}' backup."
